
#include <string>
#include <vector>
#include <iostream>
#include <algorithm>

using namespace std;

int solution(vector<vector<int>> board, vector<int> moves) {
    int answer = 0;
    vector<int> result;

    //새로운 보드판을 만들어서 돌려줄겁니다
    vector<vector<int>> map(board[0].size());
    
    for(int i=0; i<board.size(); i++){
        for(int j=board.size()-1; j>=0; j--){
            if(board[j][i]!=0){
                map[i].push_back(board[j][i]);
            }
        }
    }
    
    //크레인 조작수 만큼 result 통에 넣어줍니다.
    for(int i=0; i<moves.size(); i++){
        result.push_back(map[moves[i]-1].back());
        map[moves[i]-1].pop_back();
    }
    
    //result통을 검사합니다.
    for(int i=1; i<result.size(); i++){
        if(result[i-1]==result[i]){
            result.erase(result.begin()+i-1,result.begin()+i+1);
            answer+=2;
            i=1;
        }
        cout<<result.size()<<endl;
    }
    //근데 도대체 왜 2케이스에서 한번 더 세지는 걸까..... 
    //2케이스는 5*5 크기에 싹다 같은 인형이야 즉 24개가 나와야하는데 자꾸 26개가 나와. 왜??
    //if(answer>board.size()*board[0].size()) answer-=2;
    return answer;
}
