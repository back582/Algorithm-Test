
#include <iostream>
#include <algorithm>

using namespace std;

static int N = 0;
static int B = 0;
static int arr[21] = { 0 };
static int result;
void dfs(int index, int sum);

int main(void)
{   
    ios_base::sync_with_stdio(false); 
    cin.tie(NULL);
    cout.tie(NULL);
    int Tc = 0;
    cin >> Tc;
    for (int allcnt = 1; allcnt <= Tc; allcnt++) {
        cin >> N >> B;
        for (int i = 0; i < N; i++) {
            cin >> arr[i];
        }
        result = 987654321;
        dfs(0, 0);
        cout << "#" << allcnt << " "<< result-B << endl;
    }
    return 0;
}

void dfs(int index, int sum) {
    if (index > N) return;
    if (index == N) {
        if (sum >= B) {
            result = min(result, sum);
        }
    }
    dfs(index + 1, sum + arr[index]);
    dfs(index + 1, sum);
}
